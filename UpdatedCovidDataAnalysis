SELECT * FROM UpdCovidDeaths;
SELECT * FROM Updcovidvaccinations;


-- Total Cases Vs Total Deaths Per Day 
-- Daily likelihood of dying if contract covid
SELECT location, date, total_cases, total_deaths, total_deaths / total_cases *100 AS 'PercentageDeaths'
FROM UpdCovidDeaths
ORDER BY 1, 2;


-- Daily Total Cases Vs Population in UK 
-- Percentage Population has Covid Each Day in UK
SELECT location, date, population, total_cases, total_cases / population *100 AS 'Percentage Population With Covid'
FROM UpdCovidDeaths
WHERE location LIKE '%kingdom%'
ORDER BY 1, 2;



-- Countries with Highest Infection Rates compared to Population:
SELECT location, population, MAX(total_cases) AS 'Highest Infection Count', MAX(total_cases/population *100) AS 'PercentPopulationInfected'
FROM UpdCovidDeaths
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC;


-- Countries with Highest Death Count :
SELECT location, MAX(total_deaths) AS 'HighestDeathCount'
FROM UpdCovidDeaths
WHERE continent IS NOT NULL
GROUP BY location 
ORDER BY HighestDeathCount DESC;


-- Countries with Highest Percentage Death Count Per Population:
SELECT location, MAX(total_deaths) AS 'Highest Death Count', MAX(total_deaths)/population*100 AS 'PercentageDeathsPerPopulation'
FROM UpdCovidDeaths
WHERE continent IS NOT NULL AND total_deaths IS NOT NULL
GROUP BY location, population
ORDER BY PercentageDeathsPerPopulation DESC;



-- Highest Number Deaths per CONTINENT 
SELECT location, MAX(CAST(total_deaths AS INT)) AS 'HighestDeathCount'
FROM UpdCovidDeaths
WHERE continent IS NULL 
AND location NOT LIKE '%income%'
GROUP BY location
ORDER BY HighestDeathCount DESC;

-- Highest Number Deaths per INCOME BAND
SELECT location, MAX(total_deaths) AS 'HighestDeathCount'
FROM UpdCovidDeaths
WHERE continent IS NULL 
AND location LIKE '%income%'
GROUP BY location
ORDER BY HighestDeathCount DESC;


-- Daily Global Number Cases, Deaths and Daily Global Death Percentage
SELECT date, SUM(new_cases) AS 'DailyNewCases', SUM(new_deaths) AS 'DailyNewDeaths', SUM(new_deaths)/SUM(new_cases)* 100 AS 'Daily Death Percentage'
FROM UpdCovidDeaths
WHERE continent IS NOT NULL
GROUP BY date 
ORDER BY 1, 2;


-- Total Death Percentage of cases Per Country
SELECT location, SUM(new_cases) AS 'Covid Cases', SUM(new_deaths) AS 'Covid Deaths', SUM(new_deaths)/SUM(new_cases)* 100 AS 'Country Death Percentage'
FROM UpdCovidDeaths
WHERE continent IS NOT NULL
GROUP BY location 
ORDER BY 4 DESC;


-- Global Number Covid Cases, Deaths and Death Percentage
SELECT SUM(new_cases) AS 'Covid Cases', SUM(new_deaths) AS 'Covid Deaths', SUM(new_deaths)/SUM(new_cases)*100 AS 'Global Death Percentage'
FROM UpdCovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1;


-- Total Death Percentage of cases Per Income Band
SELECT location, SUM(new_cases) AS 'Covid Cases', SUM(new_deaths) AS 'Covid Deaths', SUM(new_deaths)/SUM(new_cases)* 100 AS 'Daily Death Percentage'
FROM UpdCovidDeaths
WHERE continent IS NULL
AND location LIKE '%income%'
GROUP BY location 
ORDER BY 1, 2 DESC;



SELECT * FROM UpdCovidVaccinations;

-- Now we JOIN tables using dea(deaths) and vac(vaccinations)
-- knowing the data tables given in excel, we can join thse 2 on  location,  date , continent rows to add on new columns.

SELECT * FROM UpdCovidDeaths dea
JOIN UpdCovidVaccinations vac 
ON
dea.location = vac.location 
AND
dea.date = vac.date ;

-- Max Percentage population Vaccinated per Country:
SELECT dea.location, dea.population, MAX(vac.new_vaccinations) AS 'MaxPeopleVaccinated' , MAX(vac.new_vaccinations)/dea.population*100 AS 'Percentage Population Vaccinated' 
FROM UpdCovidDeaths dea
JOIN Updcovidvaccinations vac 
ON dea.location = vac.location 
WHERE dea.continent IS NOT NULL
GROUP BY dea.location, population --AND vac.new_vaccinations IS NOT NULL
ORDER BY 4 DESC;


-- Percentage Population Vaccinated vs Percentage Population Deaths Daily Per Country:

SELECT dea.location, dea.population , MAX(vac.new_vaccinations)/dea.population*100 AS 'Percentage Population Vaccinated'
, MAX(dea.total_deaths)/dea.population*100 AS 'Percentage Population Deaths' 
FROM UpdCovidDeaths dea
JOIN Updcovidvaccinations vac 
ON dea.location = vac.location 
WHERE dea.continent IS NOT NULL 
GROUP BY dea.location, population --AND vac.new_vaccinations IS NOT NULL
ORDER BY 3 DESC ,4;
-- could plot percentage vaccinates to percentage deaths for each country and see if theres any correlation over the whole T



-- Total Population Vs Vaccinated Per Continent/Country Per Day
-- Percentage Population who Received at least one Covid Vaccine + Rolling Count Vaccines Given

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 'RollingPeopleVaccinated'  -- at each location, we want the adding up to be broken up and start over
FROM UpdCovidDeaths dea
JOIN Updcovidvaccinations vac 
ON dea.location = vac.location 
AND dea.date = vac.date 
WHERE dea.continent IS NOT NULL --AND vac.new_vaccinations IS NOT NULL
ORDER BY 2, 3;



-- Using CTE to perform Calculation on Partition By in previous query (V.1)
-- Percentage Population Vaccinated per Day in Each Country

WITH PopVsVac (Continent, Location, Date, Population, new_vaccinations, RollingPeopleVaccinated)
AS 
    (
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 'RollingPeopleVaccinated' 
FROM dbo.CovidDeaths dea
JOIN dbo.covidvaccinations vac 
ON dea.location = vac.location 
AND dea.date = vac.date 
WHERE dea.continent IS NOT NULL 
    )
SELECT *, (RollingPeopleVaccinated/population)*100 AS 'PercentagePeopleVaccinated' FROM PopVsVac;



--TEMP TABLE to Perform Calculation on Partition By in previous query (V.2)
-- Percentage Population Vaccinated per Day in Each Location

DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
( 
Continent NVARCHAR(255),
Location NVARCHAR(255),
Date DATE,
Population NUMERIC,
new_vaccinations NUMERIC,
RollingPeopleVaccinated NUMERIC
)
INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 'RollingPeopleVaccinated' 
FROM UpdCovidDeaths dea
JOIN Updcovidvaccinations vac 
ON dea.location = vac.location 
AND dea.date = vac.date 
WHERE dea.continent IS NOT NULL 
SELECT *, (RollingPeopleVaccinated/population)*100 AS 'PercentagePeopleVaccinated' FROM #PercentPopulationVaccinated



--Creating View To Store Data For Later Visualisations:
CREATE VIEW PercentPopulationIsVaccinated AS 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 'RollingPeopleVaccinated' 
FROM UpdCovidDeaths dea
JOIN Updcovidvaccinations vac 
ON dea.location = vac.location 
AND dea.date = vac.date 
WHERE dea.continent IS NOT NULL 
